# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mimesis_local.mimesis.providers.structure as module_0

def test_case_0():
    structure_0 = module_0.Structure()
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html_attribute_value()
    str_1 = structure_0.css_property()
    str_2 = structure_0.css()
    str_3 = structure_0.css_property()

def test_case_1():
    structure_0 = module_0.Structure()
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html()

def test_case_2():
    list_0 = []
    structure_0 = module_0.Structure(*list_0)
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html_attribute_value()
    list_1 = []
    structure_1 = module_0.Structure(*list_1)
    str_1 = structure_1.css_property()
    with pytest.raises(NotImplementedError):
        structure_1.html_attribute_value(attribute=str_1)

def test_case_3():
    structure_0 = module_0.Structure()
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html_attribute_value()

@pytest.mark.xfail(strict=True)
def test_case_4():
    structure_0 = module_0.Structure()
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html_attribute_value()
    str_1 = structure_0.css_property()
    str_2 = structure_0.__str__()
    str_3 = structure_0.css_property()
    structure_1 = module_0.Structure()
    str_4 = structure_1.css_property()
    str_5 = structure_1.html()
    structure_1.sentence()

@pytest.mark.xfail(strict=True)
def test_case_5():
    structure_0 = module_0.Structure()
    assert f'{type(structure_0).__module__}.{type(structure_0).__qualname__}' == 'mimesis_local.mimesis.providers.structure.Structure'
    assert structure_0.seed is None
    assert f'{type(structure_0.random).__module__}.{type(structure_0.random).__qualname__}' == 'mimesis.random.Random'
    assert structure_0.locale == 'en'
    str_0 = structure_0.html_attribute_value()
    str_1 = structure_0.css_property()
    str_2 = structure_0.__str__()
    str_3 = structure_0.css_property()
    structure_1 = module_0.Structure()
    str_4 = structure_1.html()
    structure_1.sentence()