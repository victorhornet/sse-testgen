# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import mimesis_local.mimesis.builtins.pt_br as module_0

def test_case_0():
    brazil_spec_provider_0 = module_0.BrazilSpecProvider()
    assert f'{type(brazil_spec_provider_0).__module__}.{type(brazil_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.pt_br.BrazilSpecProvider'
    assert brazil_spec_provider_0.seed is None
    assert f'{type(brazil_spec_provider_0.random).__module__}.{type(brazil_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert brazil_spec_provider_0.locale == 'pt-br'
    str_0 = brazil_spec_provider_0.cpf()

def test_case_1():
    bool_0 = False
    brazil_spec_provider_0 = module_0.BrazilSpecProvider(bool_0)
    assert f'{type(brazil_spec_provider_0).__module__}.{type(brazil_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.pt_br.BrazilSpecProvider'
    assert brazil_spec_provider_0.seed is False
    assert f'{type(brazil_spec_provider_0.random).__module__}.{type(brazil_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert brazil_spec_provider_0.locale == 'pt-br'
    str_0 = brazil_spec_provider_0.cnpj(bool_0)
    assert str_0 == '66048764759382'
    brazil_spec_provider_1 = module_0.BrazilSpecProvider()
    assert brazil_spec_provider_1.locale == 'pt-br'
    brazil_spec_provider_2 = module_0.BrazilSpecProvider()
    assert brazil_spec_provider_2.locale == 'pt-br'
    str_1 = brazil_spec_provider_2.__str__()
    assert str_1 == 'BrazilSpecProvider <pt-br>'
    str_2 = brazil_spec_provider_1.cpf(bool_0)
    brazil_spec_provider_3 = module_0.BrazilSpecProvider()
    assert brazil_spec_provider_3.locale == 'pt-br'

def test_case_2():
    brazil_spec_provider_0 = module_0.BrazilSpecProvider()
    assert f'{type(brazil_spec_provider_0).__module__}.{type(brazil_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.pt_br.BrazilSpecProvider'
    assert brazil_spec_provider_0.seed is None
    assert f'{type(brazil_spec_provider_0.random).__module__}.{type(brazil_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert brazil_spec_provider_0.locale == 'pt-br'
    str_0 = brazil_spec_provider_0.cpf()

def test_case_3():
    brazil_spec_provider_0 = module_0.BrazilSpecProvider()
    assert f'{type(brazil_spec_provider_0).__module__}.{type(brazil_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.pt_br.BrazilSpecProvider'
    assert brazil_spec_provider_0.seed is None
    assert f'{type(brazil_spec_provider_0.random).__module__}.{type(brazil_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert brazil_spec_provider_0.locale == 'pt-br'
    str_0 = brazil_spec_provider_0.cnpj()
    str_1 = 'j0Q3t(I'
    generator_0 = brazil_spec_provider_0.override_locale(str_1)

def test_case_4():
    bool_0 = False
    brazil_spec_provider_0 = module_0.BrazilSpecProvider()
    assert f'{type(brazil_spec_provider_0).__module__}.{type(brazil_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.pt_br.BrazilSpecProvider'
    assert brazil_spec_provider_0.seed is None
    assert f'{type(brazil_spec_provider_0.random).__module__}.{type(brazil_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert brazil_spec_provider_0.locale == 'pt-br'
    str_0 = brazil_spec_provider_0.cnpj(bool_0)
    brazil_spec_provider_1 = module_0.BrazilSpecProvider()
    assert brazil_spec_provider_1.locale == 'pt-br'