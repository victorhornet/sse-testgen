# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mimesis.random as module_0
import platform as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    random_0 = module_0.Random()
    str_0 = random_0.custom_code()
    bool_0 = True
    none_type_0 = None
    random_0.randints(bool_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    random_0 = module_0.Random()
    str_0 = 'I\x0b?%V=^l4-N'
    str_1 = random_0.schoice(str_0)
    random_0.custom_code(char=random_0)

def test_case_2():
    random_0 = module_0.Random()
    str_0 = 'reimpregnating'
    bool_0 = False
    str_1 = random_0.schoice(str_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    random_0 = module_0.Random()
    str_0 = random_0.randstr()
    int_0 = 123
    str_1 = random_0.randstr(int_0, int_0)
    var_0 = module_1.node()
    var_1 = var_0.__gt__(int_0)
    module_0.get_random_item(random_0, var_0)

def test_case_4():
    bytes_0 = b'\xda\xd7\xb7\xa8w!\xe2K\xb9\xb6c\xf5j\xd5\xf0\xac\xa7\xbc\\'
    var_0 = module_1.node()
    var_1 = module_0.get_random_item(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    module_0.get_random_item(bool_0)

def test_case_6():
    random_0 = module_0.Random()

@pytest.mark.xfail(strict=True)
def test_case_7():
    random_0 = module_0.Random()
    int_0 = 123
    bool_0 = False
    str_0 = random_0.randstr(bool_0, int_0)
    module_0.get_random_item(int_0)

def test_case_8():
    random_0 = module_0.Random()
    str_0 = random_0.custom_code()
    bool_0 = True
    list_0 = random_0.randints(bool_0, bool_0)
    bool_1 = False
    with pytest.raises(ValueError):
        random_0.randints(bool_1)

@pytest.mark.xfail(strict=True)
def test_case_9():
    random_0 = module_0.Random()
    random_0.urandom()

@pytest.mark.xfail(strict=True)
def test_case_10():
    random_0 = module_0.Random()
    random_1 = module_0.Random()
    str_0 = random_1.custom_code()
    str_1 = random_0.custom_code(str_0)
    random_1.expovariate(str_1)

@pytest.mark.xfail(strict=True)
def test_case_11():
    random_0 = module_0.Random()
    int_0 = 747
    bool_0 = False
    str_0 = '"51Dl-^['
    bool_1 = True
    str_1 = random_0.schoice(str_0, bool_1)
    float_0 = random_0.uniform(int_0, bool_0)
    random_1 = module_0.Random()
    module_0.get_random_item(random_1)

@pytest.mark.xfail(strict=True)
def test_case_12():
    random_0 = module_0.Random()
    module_0.get_random_item(random_0, random_0)