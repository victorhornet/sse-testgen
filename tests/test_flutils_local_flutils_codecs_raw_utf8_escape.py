# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flutils_local.flutils.codecs.raw_utf8_escape as module_0
import codecs as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.encode(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'$L\xad\xe3\xea\xf7\xcb\xdd\xba\xa5_\xf5\xf3\x02\x8d\xdf\x8e$\x1f\n'
    bytes_1 = b'\x12J\xab\x11@\x192\xb9\x94|\xf3T[ \xab\xa7<'
    module_0.encode(bytes_0, bytes_1)

def test_case_2():
    none_type_0 = module_0.register()
    assert module_0.NAME == 'raw_utf8_escape'
    bytes_0 = b']n\x11\xf2\xaa\xeb'
    with pytest.raises(UnicodeDecodeError):
        module_0.decode(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = module_0.register()
    assert module_0.NAME == 'raw_utf8_escape'
    none_type_1 = module_0.register()
    none_type_2 = module_0.register()
    none_type_3 = module_0.register()
    module_0.decode(none_type_3)

@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    tuple_0 = module_0.encode(set_0)
    assert module_0.NAME == 'raw_utf8_escape'
    str_0 = 'vWIjzo}'
    tuple_1 = module_0.encode(str_0, str_0)
    module_1.getencoder(str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = module_0.register()
    assert module_0.NAME == 'raw_utf8_escape'
    module_1.getencoder(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '[aA$['
    module_0.decode(str_0)

def test_case_7():
    bytes_0 = b'\x15\xdf\xc9\x11\xb03=\xd3\xa4\x85\xeb\x99\xfa'
    int_0 = 2259
    tuple_0 = (bytes_0, int_0)
    with pytest.raises(UnicodeEncodeError):
        module_0.encode(tuple_0)