# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flutils_local.flutils.strutils as module_0

def test_case_0():
    str_0 = 'IIzs:oWP,0xmQ#d*9#'
    str_1 = module_0.as_escaped_unicode_literal(str_0)
    assert str_1 == '\\x49\\x49\\x7a\\x73\\x3a\\x6f\\x57\\x50\\x2c\\x30\\x78\\x6d\\x51\\x23\\x64\\x2a\\x39\\x23'

def test_case_1():
    str_0 = '__hash__'
    str_1 = module_0.as_escaped_utf8_literal(str_0)
    assert str_1 == '\\x5f\\x5f\\x68\\x61\\x73\\x68\\x5f\\x5f'

def test_case_2():
    str_0 = '!9,=^6jj+Cav'
    str_1 = module_0.camel_to_underscore(str_0)
    assert str_1 == '!9,=^6jj+_cav'
    str_2 = '={self.'
    str_3 = module_0.underscore_to_camel(str_2)
    assert str_3 == '={self.'

def test_case_3():
    str_0 = "NtM${cE!/'bnp#W*|25v"
    bool_0 = False
    str_1 = module_0.underscore_to_camel(str_0, bool_0)
    assert str_1 == "Ntm${ce!/'bnp#w*|25v"

def test_case_4():
    str_0 = '{[O.cHCFhk~'
    str_1 = module_0.as_escaped_unicode_literal(str_0)
    assert str_1 == '\\x7b\\x5b\\x4f\\x2e\\x63\\x48\\x43\\x46\\x68\\x6b\\x7e'
    str_2 = 'Js\\.mMD~_Bgm~0`,O\x0b+'
    str_3 = module_0.convert_escaped_unicode_literal(str_2)
    assert str_3 == 'Js\\.mMD~_Bgm~0`,O\x0b+'

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    module_0.convert_escaped_utf8_literal(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '*\n'
    str_1 = module_0.convert_escaped_unicode_literal(str_0)
    assert str_1 == '*\n'
    str_2 = 'object.__setattr__('
    str_3 = module_0.underscore_to_camel(str_2)
    assert str_3 == 'object.Setattr('
    str_4 = module_0.camel_to_underscore(str_1)
    assert str_4 == '*\n'
    str_5 = module_0.underscore_to_camel(str_2)
    assert str_5 == 'object.Setattr('
    str_6 = 'h3xz[)m?'
    str_7 = module_0.as_escaped_utf8_literal(str_6)
    assert str_7 == '\\x68\\x33\\x78\\x7a\\x5b\\x29\\x6d\\x3f'
    str_8 = module_0.as_escaped_unicode_literal(str_0)
    assert str_8 == '\\x2a\\x0a'
    none_type_0 = None
    module_0.underscore_to_camel(none_type_0)