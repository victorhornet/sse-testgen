# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import triangle as module_0


def test_case_0():
    int_0 = -845
    int_1 = -1787
    str_0 = module_0.triangle(int_0, int_1, int_0)
    assert str_0 == "Isosceles triangle"


def test_case_1():
    bool_0 = True
    str_0 = module_0.triangle(bool_0, bool_0, bool_0)
    assert str_0 == "Equilateral triangle"
    int_0 = 1392
    bool_1 = False
    bool_2 = True
    str_1 = module_0.triangle(bool_1, bool_2, bool_2)
    assert str_1 == "Isosceles triangle"
    str_2 = module_0.triangle(bool_0, int_0, int_0)
    assert str_2 == "Isosceles triangle"


def test_case_2():
    int_0 = 2926
    str_0 = module_0.triangle(int_0, int_0, int_0)
    assert str_0 == "Equilateral triangle"
    int_1 = -604
    none_type_0 = None
    str_1 = module_0.triangle(none_type_0, none_type_0, int_1)
    assert str_1 == "Isosceles triangle"
    str_2 = module_0.triangle(int_1, int_1, int_1)
    assert str_2 == "Equilateral triangle"
    none_type_1 = None
    str_3 = module_0.triangle(int_1, int_1, none_type_1)
    assert str_3 == "Isosceles triangle"
    int_2 = -1542
    str_4 = module_0.triangle(int_1, int_1, int_2)
    assert str_4 == "Isosceles triangle"


def test_case_3():
    int_0 = -1144
    int_1 = 2605
    str_0 = module_0.triangle(int_0, int_1, int_1)
    assert str_0 == "Isosceles triangle"
    int_2 = 3847
    bool_0 = False
    int_3 = -480
    str_1 = module_0.triangle(int_2, bool_0, int_3)
    assert str_1 == "Scalene triangle"
    bool_1 = False
    str_2 = module_0.triangle(bool_1, int_3, bool_0)
    assert str_2 == "Isosceles triangle"


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1260
    list_0 = [int_0]
    module_0.triangle(list_0, int_0, int_0)
