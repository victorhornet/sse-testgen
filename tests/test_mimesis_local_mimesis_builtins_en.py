# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mimesis_local.mimesis.builtins.en as module_0

def test_case_0():
    str_0 = '\rL$*'
    u_s_a_spec_provider_0 = module_0.USASpecProvider()
    assert f'{type(u_s_a_spec_provider_0).__module__}.{type(u_s_a_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_0.seed is None
    assert f'{type(u_s_a_spec_provider_0.random).__module__}.{type(u_s_a_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_0.locale == 'en'
    str_1 = u_s_a_spec_provider_0.tracking_number()
    u_s_a_spec_provider_1 = module_0.USASpecProvider()
    with pytest.raises(ValueError):
        u_s_a_spec_provider_1.tracking_number(str_0)

def test_case_1():
    u_s_a_spec_provider_0 = module_0.USASpecProvider()
    assert f'{type(u_s_a_spec_provider_0).__module__}.{type(u_s_a_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_0.seed is None
    assert f'{type(u_s_a_spec_provider_0.random).__module__}.{type(u_s_a_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_0.locale == 'en'
    str_0 = u_s_a_spec_provider_0.tracking_number()

def test_case_2():
    u_s_a_spec_provider_0 = module_0.USASpecProvider()
    assert f'{type(u_s_a_spec_provider_0).__module__}.{type(u_s_a_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_0.seed is None
    assert f'{type(u_s_a_spec_provider_0.random).__module__}.{type(u_s_a_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_0.locale == 'en'
    str_0 = u_s_a_spec_provider_0.ssn()

def test_case_3():
    u_s_a_spec_provider_0 = module_0.USASpecProvider()
    assert f'{type(u_s_a_spec_provider_0).__module__}.{type(u_s_a_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_0.seed is None
    assert f'{type(u_s_a_spec_provider_0.random).__module__}.{type(u_s_a_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_0.locale == 'en'
    str_0 = u_s_a_spec_provider_0.__str__()
    var_0 = u_s_a_spec_provider_0.personality()

def test_case_4():
    bool_0 = False
    u_s_a_spec_provider_0 = module_0.USASpecProvider(bool_0)
    assert f'{type(u_s_a_spec_provider_0).__module__}.{type(u_s_a_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_0.seed is False
    assert f'{type(u_s_a_spec_provider_0.random).__module__}.{type(u_s_a_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_0.locale == 'en'
    str_0 = u_s_a_spec_provider_0.ssn()
    assert str_0 == '865-50-6891'
    u_s_a_spec_provider_1 = module_0.USASpecProvider()
    str_1 = u_s_a_spec_provider_1.ssn()
    u_s_a_spec_provider_2 = module_0.USASpecProvider()
    complex_0 = (-400+6249.708j)
    generator_0 = u_s_a_spec_provider_1.override_locale(u_s_a_spec_provider_1)
    none_type_0 = None
    u_s_a_spec_provider_3 = module_0.USASpecProvider(none_type_0)
    u_s_a_spec_provider_4 = module_0.USASpecProvider()
    str_2 = u_s_a_spec_provider_4.ssn()
    u_s_a_spec_provider_5 = module_0.USASpecProvider(none_type_0)
    var_0 = u_s_a_spec_provider_1.personality()
    var_1 = u_s_a_spec_provider_5.personality()
    var_2 = u_s_a_spec_provider_5.personality()
    u_s_a_spec_provider_6 = module_0.USASpecProvider(complex_0)
    assert f'{type(u_s_a_spec_provider_6).__module__}.{type(u_s_a_spec_provider_6).__qualname__}' == 'mimesis_local.mimesis.builtins.en.USASpecProvider'
    assert u_s_a_spec_provider_6.seed == (-400+6249.708j)
    assert f'{type(u_s_a_spec_provider_6.random).__module__}.{type(u_s_a_spec_provider_6.random).__qualname__}' == 'mimesis.random.Random'
    assert u_s_a_spec_provider_6.locale == 'en'
    var_3 = u_s_a_spec_provider_6.personality()
    assert var_3 == 'ESFJ'
    str_3 = u_s_a_spec_provider_6.tracking_number()
    assert str_3 == 'FJ 178 663 368 US'
    bytes_0 = b'\xfb<k}\xf6\x0f\xf8\xff$\xb6G\x17\x0b\xeb;\xe5'
    str_4 = u_s_a_spec_provider_6.ssn()
    assert str_4 == '583-88-2630'
    str_5 = u_s_a_spec_provider_3.__str__()
    u_s_a_spec_provider_7 = module_0.USASpecProvider(bytes_0)
    generator_1 = u_s_a_spec_provider_0.override_locale()
    str_6 = u_s_a_spec_provider_1.tracking_number()
    u_s_a_spec_provider_8 = module_0.USASpecProvider()
    str_7 = u_s_a_spec_provider_8.ssn()
    var_4 = u_s_a_spec_provider_2.personality()
    u_s_a_spec_provider_9 = module_0.USASpecProvider()