# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import fib as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    int_0 = module_0.fibonacci(bool_0)
    assert int_0 == 0
    int_1 = module_0.fibonacci(bool_0)
    assert int_1 == 0
    int_2 = 2862
    int_3 = module_0.fibonacci(int_2)
    assert int_3 == 5931183947278819046841913168384858453056520708155761809946965612613703181343370262543769135358377155910321277037612949815527396512569188807522531136831063840324039711445712396864292289499971018253337899995616238287142269373014853667179364583585398978043961088274172106463559962142422066261184743189507403774778016143592396066566386291855000537815445933426294040402753064730848731497220210912956436043286412763802268485125347315462270138050681000463253360475665983845453398468637670525891534879573979128300162712247228927367884171511173944120731914946067279031123146095186704646286785844133173351656
    int_4 = module_0.fibonacci(bool_0)
    assert int_4 == 0
    module_0.fibonacci(int_3)

def test_case_1():
    bool_0 = True
    int_0 = module_0.fibonacci(bool_0)
    assert int_0 == 1

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2603
    int_1 = module_0.fibonacci(int_0)
    assert int_1 == 4419188925194111592328945377997453974809408950612496578705368832865995297134267929550504683147409235399935749203437807339102150508404389261571089144935920618249337230509125490059834217479470748708754758462538375651511537095035307948181213512599633338883127358977267107083029367356097771086368717574921796885295054658689225832307626054506164696926948209033850793052291974482071309567791417023266658813750680565663284575003004622294878880852046576163290787496918246000742894309570941568243787359107793718099035589110460063918101459457324127930777
    module_0.fibonacci(int_1)