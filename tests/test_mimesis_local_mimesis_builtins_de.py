# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mimesis_local.mimesis.builtins.de as module_0

def test_case_0():
    germany_spec_provider_0 = module_0.GermanySpecProvider()
    assert f'{type(germany_spec_provider_0).__module__}.{type(germany_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.de.GermanySpecProvider'
    assert germany_spec_provider_0.seed is None
    assert f'{type(germany_spec_provider_0.random).__module__}.{type(germany_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert germany_spec_provider_0.locale == 'de'
    bool_0 = True
    germany_spec_provider_1 = module_0.GermanySpecProvider()
    assert germany_spec_provider_1.locale == 'de'
    str_0 = germany_spec_provider_1.noun(bool_0)
    str_1 = germany_spec_provider_1.noun()
    germany_spec_provider_2 = module_0.GermanySpecProvider()

def test_case_1():
    bool_0 = False
    germany_spec_provider_0 = module_0.GermanySpecProvider()
    assert f'{type(germany_spec_provider_0).__module__}.{type(germany_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.de.GermanySpecProvider'
    assert germany_spec_provider_0.seed is None
    assert f'{type(germany_spec_provider_0.random).__module__}.{type(germany_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert germany_spec_provider_0.locale == 'de'
    str_0 = germany_spec_provider_0.noun(bool_0)

def test_case_2():
    float_0 = -853.38174
    germany_spec_provider_0 = module_0.GermanySpecProvider(float_0)
    assert f'{type(germany_spec_provider_0).__module__}.{type(germany_spec_provider_0).__qualname__}' == 'mimesis_local.mimesis.builtins.de.GermanySpecProvider'
    assert germany_spec_provider_0.seed == pytest.approx(-853.38174, abs=0.01, rel=0.01)
    assert f'{type(germany_spec_provider_0.random).__module__}.{type(germany_spec_provider_0.random).__qualname__}' == 'mimesis.random.Random'
    assert germany_spec_provider_0.locale == 'de'