# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flutils.decorators as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    cached_property_0 = module_0.cached_property(bool_0)
    assert f'{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}' == 'flutils.decorators.cached_property'
    assert cached_property_0.func is False
    cached_property_0.__get__(cached_property_0, cached_property_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    cached_property_0 = module_0.cached_property(none_type_0)
    assert f'{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}' == 'flutils.decorators.cached_property'
    assert cached_property_0.func is None
    var_0 = cached_property_0.__get__(none_type_0, none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'flutils.decorators.cached_property'
    assert var_0.func is None
    cached_property_0.__get__(cached_property_0, cached_property_0)

def test_case_2():
    none_type_0 = None
    cached_property_0 = module_0.cached_property(none_type_0)
    assert f'{type(cached_property_0).__module__}.{type(cached_property_0).__qualname__}' == 'flutils.decorators.cached_property'
    assert cached_property_0.func is None