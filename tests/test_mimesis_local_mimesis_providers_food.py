# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mimesis_local.mimesis.providers.food as module_0

def test_case_0():
    food_0 = module_0.Food()
    assert f'{type(food_0).__module__}.{type(food_0).__qualname__}' == 'mimesis_local.mimesis.providers.food.Food'
    assert food_0.seed is None
    assert f'{type(food_0.random).__module__}.{type(food_0.random).__qualname__}' == 'mimesis.random.Random'
    assert food_0.locale == 'en'
    str_0 = food_0.spices()

def test_case_1():
    food_0 = module_0.Food()
    assert f'{type(food_0).__module__}.{type(food_0).__qualname__}' == 'mimesis_local.mimesis.providers.food.Food'
    assert food_0.seed is None
    assert f'{type(food_0.random).__module__}.{type(food_0.random).__qualname__}' == 'mimesis.random.Random'
    assert food_0.locale == 'en'
    str_0 = food_0.vegetable()
    generator_0 = food_0.override_locale()
    str_1 = food_0.spices()
    str_2 = food_0.dish()
    str_3 = food_0.__str__()

def test_case_2():
    food_0 = module_0.Food()
    assert f'{type(food_0).__module__}.{type(food_0).__qualname__}' == 'mimesis_local.mimesis.providers.food.Food'
    assert food_0.seed is None
    assert f'{type(food_0.random).__module__}.{type(food_0.random).__qualname__}' == 'mimesis.random.Random'
    assert food_0.locale == 'en'
    str_0 = food_0.get_current_locale()
    str_1 = food_0.fruit()
    str_2 = food_0.spices()
    str_3 = food_0.drink()
    str_4 = food_0.__str__()

def test_case_3():
    food_0 = module_0.Food()
    assert f'{type(food_0).__module__}.{type(food_0).__qualname__}' == 'mimesis_local.mimesis.providers.food.Food'
    assert food_0.seed is None
    assert f'{type(food_0.random).__module__}.{type(food_0.random).__qualname__}' == 'mimesis.random.Random'
    assert food_0.locale == 'en'
    none_type_0 = food_0.reseed()
    str_0 = food_0.spices()
    str_1 = food_0.dish()

@pytest.mark.xfail(strict=True)
def test_case_4():
    food_0 = module_0.Food()
    assert f'{type(food_0).__module__}.{type(food_0).__qualname__}' == 'mimesis_local.mimesis.providers.food.Food'
    assert food_0.seed is None
    assert f'{type(food_0.random).__module__}.{type(food_0.random).__qualname__}' == 'mimesis.random.Random'
    assert food_0.locale == 'en'
    str_0 = food_0.drink()
    none_type_0 = None
    food_1 = module_0.Food()
    str_1 = food_1.spices()
    module_0.Food(*none_type_0)