# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flutils_local.flutils.codecs.b64 as module_0
import codecs as module_1

def test_case_0():
    str_0 = 'line_length'
    with pytest.raises(UnicodeEncodeError):
        module_0.encode(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = module_0.register()
    assert module_0.NAME == 'b64'
    bool_0 = True
    module_0.decode(bool_0)

def test_case_2():
    bytes_0 = b'w\xb3A\xc4^*'
    int_0 = 911
    tuple_0 = (bytes_0, int_0)
    tuple_1 = module_0.encode(tuple_0)
    assert module_0.NAME == 'b64'
    str_0 = '\nA selection of render functions.\n\nThese functions generate the escape-sequences that trigger certain colors/effects in\nthe terminals.\n'
    none_type_0 = module_0.register()
    with pytest.raises(UnicodeEncodeError):
        module_0.encode(str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b'\xc0\x98\x96<~\x82\xc0'
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    module_0.decode(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'vWIjzo}'
    module_1.getwriter(str_0)