# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import re as module_0
import mimesis_local.mimesis.providers.file as module_1
import enum as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '/\t'
    list_0 = [str_0, str_0]
    module_0.fullmatch(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    file_0 = module_1.File()
    assert f'{type(file_0).__module__}.{type(file_0).__qualname__}' == 'mimesis_local.mimesis.providers.file.File'
    assert file_0.seed is None
    assert f'{type(file_0.random).__module__}.{type(file_0.random).__qualname__}' == 'mimesis.random.Random'
    file_0.size(file_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    file_0 = module_1.File()
    assert f'{type(file_0).__module__}.{type(file_0).__qualname__}' == 'mimesis_local.mimesis.providers.file.File'
    assert file_0.seed is None
    assert f'{type(file_0.random).__module__}.{type(file_0.random).__qualname__}' == 'mimesis.random.Random'
    str_0 = file_0.file_name()
    enum_dict_0 = module_2._EnumDict()
    none_type_0 = None
    enum_dict_0.__delattr__(none_type_0, enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    file_0 = module_1.File()
    assert f'{type(file_0).__module__}.{type(file_0).__qualname__}' == 'mimesis_local.mimesis.providers.file.File'
    assert file_0.seed is None
    assert f'{type(file_0.random).__module__}.{type(file_0.random).__qualname__}' == 'mimesis.random.Random'
    str_0 = file_0.mime_type()
    str_1 = file_0.mime_type()
    str_2 = file_0.extension()
    file_0.sentence()