# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sty.rendertype as module_0

def test_case_0():
    bool_0 = True
    rgb_bg_0 = module_0.RgbBg(bool_0, bool_0, bool_0)
    assert f'{type(rgb_bg_0).__module__}.{type(rgb_bg_0).__qualname__}' == 'sty.rendertype.RgbBg'
    assert rgb_bg_0.args == [True, True, True]
    rgb_bg_1 = module_0.RgbBg(bool_0, bool_0, bool_0)

def test_case_1():
    bool_0 = True
    sgr_0 = module_0.Sgr(bool_0)
    assert f'{type(sgr_0).__module__}.{type(sgr_0).__qualname__}' == 'sty.rendertype.Sgr'
    assert sgr_0.args == [True]
    int_0 = 0
    rgb_fg_0 = module_0.RgbFg(bool_0, bool_0, int_0)
    assert f'{type(rgb_fg_0).__module__}.{type(rgb_fg_0).__qualname__}' == 'sty.rendertype.RgbFg'
    assert rgb_fg_0.args == [True, True, 0]

def test_case_2():
    bool_0 = False
    eightbit_bg_0 = module_0.EightbitBg(bool_0)
    assert f'{type(eightbit_bg_0).__module__}.{type(eightbit_bg_0).__qualname__}' == 'sty.rendertype.EightbitBg'
    assert eightbit_bg_0.args == [False]
    bool_1 = False
    eightbit_fg_0 = module_0.EightbitFg(bool_1)
    assert f'{type(eightbit_fg_0).__module__}.{type(eightbit_fg_0).__qualname__}' == 'sty.rendertype.EightbitFg'
    assert eightbit_fg_0.args == [False]
    rgb_bg_0 = module_0.RgbBg(eightbit_fg_0, eightbit_fg_0, bool_1)
    assert f'{type(rgb_bg_0).__module__}.{type(rgb_bg_0).__qualname__}' == 'sty.rendertype.RgbBg'
    assert f'{type(rgb_bg_0.args).__module__}.{type(rgb_bg_0.args).__qualname__}' == 'builtins.list'
    assert len(rgb_bg_0.args) == 3