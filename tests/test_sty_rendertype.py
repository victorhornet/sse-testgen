# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sty.rendertype as module_0

def test_case_0():
    int_0 = -1979
    eightbit_bg_0 = module_0.EightbitBg(int_0)
    assert f'{type(eightbit_bg_0).__module__}.{type(eightbit_bg_0).__qualname__}' == 'sty.rendertype.EightbitBg'
    assert eightbit_bg_0.args == [-1979]

def test_case_1():
    int_0 = 780
    sgr_0 = module_0.Sgr(int_0)
    assert f'{type(sgr_0).__module__}.{type(sgr_0).__qualname__}' == 'sty.rendertype.Sgr'
    assert sgr_0.args == [780]

def test_case_2():
    str_0 = '&q`q;7d,~=&bZ'
    eightbit_fg_0 = module_0.EightbitFg(str_0)
    assert f'{type(eightbit_fg_0).__module__}.{type(eightbit_fg_0).__qualname__}' == 'sty.rendertype.EightbitFg'
    assert eightbit_fg_0.args == ['&q`q;7d,~=&bZ']
    eightbit_fg_1 = module_0.EightbitFg(str_0)
    bool_0 = True
    sgr_0 = module_0.Sgr(bool_0)
    assert f'{type(sgr_0).__module__}.{type(sgr_0).__qualname__}' == 'sty.rendertype.Sgr'
    assert sgr_0.args == [True]

def test_case_3():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    rgb_fg_0 = module_0.RgbFg(none_type_0, bool_0, bool_1)
    assert f'{type(rgb_fg_0).__module__}.{type(rgb_fg_0).__qualname__}' == 'sty.rendertype.RgbFg'
    assert rgb_fg_0.args == [None, False, True]
    int_0 = 898
    rgb_bg_0 = module_0.RgbBg(bool_0, bool_0, int_0)
    assert f'{type(rgb_bg_0).__module__}.{type(rgb_bg_0).__qualname__}' == 'sty.rendertype.RgbBg'
    assert rgb_bg_0.args == [False, False, 898]
    rgb_bg_1 = module_0.RgbBg(rgb_fg_0, rgb_fg_0, rgb_bg_0)

def test_case_4():
    bool_0 = False
    rgb_bg_0 = module_0.RgbBg(bool_0, bool_0, bool_0)
    assert f'{type(rgb_bg_0).__module__}.{type(rgb_bg_0).__qualname__}' == 'sty.rendertype.RgbBg'
    assert rgb_bg_0.args == [False, False, False]